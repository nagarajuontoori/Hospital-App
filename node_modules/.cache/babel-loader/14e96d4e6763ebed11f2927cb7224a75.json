{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nagaraju\\\\new-login-api\\\\src\\\\Components\\\\Ward.jsx\";\nimport React, { Component } from 'react';\nimport Nav from './Nav';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Ward extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleget = () => {\n      console.log('get');\n    };\n\n    this.handleview = () => {\n      console.log('view');\n    };\n\n    this.state = {\n      wardlist: [],\n      loading: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    const response = await axios.get('http://localhost:8080/hospitalApp/ward/all'); // GET meth\n\n    console.log(response.data);\n    this.setState({\n      loading: false,\n      wardlist: response.data\n    });\n    console.log(this.state.wardlist);\n  }\n\n  render() {\n    const {\n      wardlist,\n      index\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        user2: this.props.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"d-flex justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"spinner-border\",\n            role: \"status\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"sr-only\",\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row g-3\",\n          children: wardlist.map((item, key) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card m-4\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"card-body mx-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    class: \"card-title mx-4\",\n                    children: item.wardType\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: this.handleview,\n                    className: \"btn btn-primary button1 pt-1  d-flex flex-row-reverse\",\n                    children: \"view\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  class: \"card-text\",\n                  children: [\"Available Beds:\", /*#__PURE__*/_jsxDEV(\"b\", {\n                    className: \"text-danger\",\n                    children: item.availableBeds\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 77\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  class: \"card-text\",\n                  children: [\"Total Beds :\", /*#__PURE__*/_jsxDEV(\"b\", {\n                    className: \"text-success\",\n                    children: item.totalBeds\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 74\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Ward;","map":{"version":3,"sources":["C:/Users/nagaraju/new-login-api/src/Components/Ward.jsx"],"names":["React","Component","Nav","axios","Ward","constructor","props","handleget","console","log","handleview","state","wardlist","loading","componentDidMount","setState","response","get","data","render","index","user","map","item","key","wardType","availableBeds","totalBeds"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AACzBI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkBnBC,SAlBmB,GAkBP,MAAM;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH,KApBkB;;AAAA,SAsBnBC,UAtBmB,GAsBN,MAAM;AACfF,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,KAxBkB;;AAEf,SAAKE,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH;;AAEsB,QAAjBC,iBAAiB,GAAG;AACtB,SAAKC,QAAL,CAAc;AAAEF,MAAAA,OAAO,EAAE;AAAX,KAAd;AACA,UAAMG,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,4CAAV,CAAvB,CAFsB,CAEyD;;AAC/ET,IAAAA,OAAO,CAACC,GAAR,CAAYO,QAAQ,CAACE,IAArB;AACA,SAAKH,QAAL,CAAc;AACVF,MAAAA,OAAO,EAAE,KADC;AAEVD,MAAAA,QAAQ,EAAEI,QAAQ,CAACE;AAFT,KAAd;AAIAV,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKE,KAAL,CAAWC,QAAvB;AACH;;AAUDO,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEP,MAAAA,QAAF;AAAYQ,MAAAA;AAAZ,QAAsB,KAAKT,KAAjC;AACA,wBACI;AAAA,8BACI,QAAC,GAAD;AAAK,QAAA,KAAK,EAAE,KAAKL,KAAL,CAAWe;AAAvB;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAA,mBACK,KAAKV,KAAL,CAAWE,OAAX,iBACG;AAAK,UAAA,KAAK,EAAC,+BAAX;AAAA,iCACI;AAAK,YAAA,KAAK,EAAC,gBAAX;AAA4B,YAAA,IAAI,EAAC,QAAjC;AAAA,mCACI;AAAM,cAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAFR,eAQI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,oBACKD,QAAQ,CAACU,GAAT,CAAa,CAACC,IAAD,EAAOC,GAAP,KAAe;AAEzB,gCAEI;AAAK,cAAA,KAAK,EAAC,UAAX;AAAA,qCACI;AAAK,gBAAA,KAAK,EAAC,gBAAX;AAAA,wCACI;AAAK,kBAAA,SAAS,EAAC,KAAf;AAAA,0CACI;AAAI,oBAAA,KAAK,EAAC,iBAAV;AAAA,8BAA6BD,IAAI,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA,0BADJ,eAGI;AAAQ,oBAAA,IAAI,EAAC,QAAb;AAAsB,oBAAA,OAAO,EAAE,KAAKf,UAApC;AAAgD,oBAAA,SAAS,EAAC,uDAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAMI;AAAG,kBAAA,KAAK,EAAC,WAAT;AAAA,6DAAoC;AAAG,oBAAA,SAAS,EAAC,aAAb;AAAA,8BAA4Ba,IAAI,CAACG;AAAjC;AAAA;AAAA;AAAA;AAAA,0BAApC;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,eAOI;AAAG,kBAAA,KAAK,EAAC,WAAT;AAAA,0DAAiC;AAAG,oBAAA,SAAS,EAAC,cAAb;AAAA,8BAA6BH,IAAI,CAACI;AAAlC;AAAA;AAAA;AAAA;AAAA,0BAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAcH,WAhBA;AADL;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqCH;;AApEwB;;AAwE7B,eAAevB,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Nav from './Nav';\r\n\r\nimport axios from 'axios';\r\n\r\n\r\nclass Ward extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            wardlist: [],\r\n            loading: false,\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ loading: true });\r\n        const response = await axios.get('http://localhost:8080/hospitalApp/ward/all') // GET meth\r\n        console.log(response.data);\r\n        this.setState({\r\n            loading: false,\r\n            wardlist: response.data\r\n        })\r\n        console.log(this.state.wardlist)\r\n    }\r\n    handleget = () => {\r\n        console.log('get')\r\n    }\r\n\r\n    handleview = () => {\r\n        console.log('view')\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { wardlist, index } = this.state\r\n        return (\r\n            <div>\r\n                <Nav user2={this.props.user} />\r\n\r\n                <div>\r\n                    {this.state.loading &&\r\n                        <div class=\"d-flex justify-content-center\">\r\n                            <div class=\"spinner-border\" role=\"status\">\r\n                                <span class=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                        </div>}\r\n\r\n                    <div className=\"row g-3\">\r\n                        {wardlist.map((item, key) => {\r\n\r\n                            return (\r\n\r\n                                <div class=\"card m-4\">\r\n                                    <div class=\"card-body mx-2\">\r\n                                        <div className=\"row\">\r\n                                            <h5 class=\"card-title mx-4\">{item.wardType}</h5>\r\n\r\n                                            <button type=\"button\" onClick={this.handleview} className=\"btn btn-primary button1 pt-1  d-flex flex-row-reverse\">view</button>\r\n                                        </div>\r\n                                        <p class=\"card-text\">Available Beds:<b className=\"text-danger\">{item.availableBeds}</b></p>\r\n                                        <p class=\"card-text\">Total Beds :<b className=\"text-success\">{item.totalBeds}</b></p>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                        }\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Ward;"]},"metadata":{},"sourceType":"module"}